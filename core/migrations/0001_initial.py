# Generated by Django 2.0.2 on 2018-04-08 23:50

import common.validators
import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('no_completo', models.CharField(max_length=64, unique=True, verbose_name='Nome completo')),
                ('ic_ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('ic_bolsista', models.BooleanField(default=True, verbose_name='Bolsista')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'usuário',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Bolsista',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_vinculo', models.CharField(choices=[('1', 'Servidor Público - Professor'), ('2', 'Servidor Público ou Empregado Público'), ('3', 'Colaborador sem vínculo com o serviço')], default='3', max_length=1, verbose_name='Tipo de Vínculo')),
                ('no_bolsista', models.CharField(max_length=32, unique=True, verbose_name='Nome')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('cpf', models.CharField(max_length=14, unique=True, validators=[common.validators.cpf], verbose_name='CPF')),
                ('dt_nascimento', models.CharField(max_length=10, verbose_name='Data de Nascimento')),
                ('rg', models.CharField(max_length=32, unique=True, verbose_name='RG')),
                ('orgao_expedidor', models.CharField(max_length=32, verbose_name='Órgão Expedidor')),
                ('telefone', models.CharField(blank=True, max_length=32, verbose_name='Telefone')),
                ('celular', models.CharField(blank=True, max_length=32, verbose_name='Celular')),
                ('matricula', models.CharField(blank=True, max_length=32, unique=True, verbose_name='Matrícula')),
                ('ic_ativo', models.BooleanField(verbose_name='Ativo')),
                ('pis_nit', models.CharField(blank=True, max_length=32, verbose_name='PIS ou NIT')),
                ('link_lattes', models.CharField(max_length=128, unique=True, validators=[common.validators.lattes_url], verbose_name='Lattes')),
                ('endereco', models.CharField(max_length=128, verbose_name='Endereço')),
                ('cidade', models.CharField(max_length=32, verbose_name='Cidade')),
                ('cep', models.CharField(max_length=32, unique=True, verbose_name='CEP')),
                ('uf', models.CharField(choices=[('AC', 'AC - Acre'), ('AL', 'AL - Alagoas'), ('AP', 'AP - Amapá'), ('AM', 'AM - Amazonas'), ('BA', 'BA - Bahia'), ('CE', 'CE - Ceará'), ('DF', 'DF - Distrito Federal'), ('ES', 'ES - Espírito Santo'), ('GO', 'GO - Goiás'), ('MA', 'MA - Maranhão'), ('MT', 'MT - Mato Grosso'), ('MS', 'MS - Mato Grosso do Sul'), ('MG', 'MG - Minas Gerais'), ('PA', 'PA - Pará'), ('PB', 'PB - Paraíba'), ('PR', 'PR - Paraná'), ('PE', 'PE - Pernambuco'), ('PI', 'PI - Piauí'), ('RJ', 'RJ - Rio de Janeiro'), ('RN', 'RN - Rio Grande do Norte'), ('RS', 'RS - Rio Grande do Sul'), ('RO', 'RO - Rondônia'), ('RR', 'RR - Roraima'), ('SC', 'SC - Santa Catarina'), ('SP', 'SP - São Paulo'), ('SE', 'SE - Sergipe'), ('TO', 'TO - Tocantins')], default='DF', max_length=2, verbose_name='UF')),
                ('banco', models.CharField(choices=[('001', '001 - BANCO DO BRASIL S/A'), ('002', '002 - BANCO CENTRAL DO BRASIL'), ('003', '003 - BANCO DA AMAZONIA S.A'), ('004', '004 - BANCO DO NORDESTE DO BRASIL S.A'), ('070', '070 - BANCO DE BRASILIA S.A'), ('104', '104 - CAIXA ECONOMICA FEDERAL'), ('237', '237 - BANCO BRADESCO S.A'), ('275', '275 - BANCO REAL S.A'), ('341', '341 - BANCO ITAU S.A'), ('409', '409 - UNIBANCO - UNIAO DOS BANCOS BRASILEIROS'), ('422', '422 - BANCO SAFRA S.A'), ('477', '477 - CITIBANK N.A'), ('502', '502 - BANCO SANTANDER S.A')], default='001', max_length=128, verbose_name='Banco')),
                ('agencia', models.CharField(max_length=32, verbose_name='Agência')),
                ('tipo_conta', models.CharField(choices=[('2', 'Conta-poupança'), ('3', 'Conta-corrente')], default='1', max_length=1, verbose_name='Tipo de Conta')),
                ('conta', models.CharField(max_length=32, verbose_name='Conta')),
                ('email_unb', models.EmailField(blank=True, max_length=254, unique=True, verbose_name='Email UnB')),
                ('telefone_local', models.CharField(blank=True, max_length=32, verbose_name='Telefone Local')),
            ],
        ),
        migrations.CreateModel(
            name='Cargo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('no_cargo', models.CharField(max_length=32, unique=True, verbose_name='Nome')),
                ('ic_ativo', models.BooleanField(verbose_name='Ativo')),
            ],
        ),
        migrations.CreateModel(
            name='Documento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_documento', models.CharField(choices=[('1', 'Fotografia'), ('2', 'Declaração'), ('3', 'Documento pessoal'), ('4', 'Certificado')], default='3', max_length=1, verbose_name='Tipo de Documento')),
                ('no_documento', models.CharField(max_length=512, verbose_name='Descrição')),
                ('dt_cadastro', models.DateTimeField(blank=True, default=datetime.datetime.now, verbose_name='Momento do Upload')),
                ('arquivo', models.FileField(upload_to='')),
                ('bolsista', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Bolsista')),
            ],
        ),
        migrations.CreateModel(
            name='Entidade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('co_entidade', models.CharField(max_length=32, unique=True, verbose_name='Código')),
                ('no_entidade', models.CharField(max_length=32, unique=True, verbose_name='Nome')),
                ('sg_entidade', models.CharField(max_length=32, unique=True, verbose_name='Sigla')),
                ('ic_ativo', models.BooleanField(verbose_name='Ativo')),
                ('cnpj', models.IntegerField(unique=True, verbose_name='CNPJ')),
                ('telefone', models.IntegerField(verbose_name='Telefone')),
                ('cep', models.IntegerField(verbose_name='CEP')),
                ('nu_municipio', models.IntegerField(verbose_name='Número do municipio')),
                ('co_esfera', models.CharField(max_length=32, unique=True, verbose_name='Esfera')),
                ('de_endereco', models.CharField(max_length=128, unique=True, verbose_name='Endereço')),
            ],
        ),
        migrations.CreateModel(
            name='Funcao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('no_funcao', models.CharField(max_length=32, unique=True, verbose_name='Nome')),
                ('ic_ativo', models.BooleanField(verbose_name='Ativo')),
            ],
            options={
                'verbose_name': 'função',
                'verbose_name_plural': 'funções',
            },
        ),
        migrations.CreateModel(
            name='Projeto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('no_projeto', models.CharField(max_length=32, verbose_name='Nome do Projeto')),
                ('sg_projeto', models.CharField(max_length=32, unique=True, verbose_name='Sigla')),
                ('dt_inicio', models.DateField(verbose_name='Data Início')),
                ('dt_fim', models.DateField(verbose_name='Data Fim')),
                ('du_duracao_meses', models.IntegerField(verbose_name='Quantidade de meses de duração')),
                ('identificao_objeto', models.TextField(max_length=2048, verbose_name='Identificação do Projeto')),
                ('justificativa', models.TextField(max_length=2048, verbose_name='Justificativa')),
                ('referencias_bibliograficas', models.TextField(max_length=2048, verbose_name='Referências Bibliográficas')),
                ('metodologia', models.TextField(max_length=1024, verbose_name='metodologia')),
                ('gestao_transferencia_tecnologia', models.TextField(max_length=1024, verbose_name='Gestão de Transferência de Tecnologia')),
                ('fk_bolsista', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bolsista', to='core.Bolsista')),
                ('fk_entidade_concedente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='concedente', to='core.Entidade')),
                ('fk_entidade_proponente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='proponente', to='core.Entidade')),
                ('fk_funcao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='funcao', to='core.Funcao')),
            ],
        ),
        migrations.CreateModel(
            name='Responsavel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('no_responsavel', models.CharField(max_length=32, unique=True, verbose_name='Nome')),
                ('cpf', models.IntegerField(verbose_name='CPF')),
                ('telefone', models.IntegerField(verbose_name='Telefone')),
                ('co_matricula', models.CharField(max_length=32, unique=True, verbose_name='Matrícula')),
                ('ic_ativo', models.BooleanField(verbose_name='Ativo')),
            ],
            options={
                'verbose_name': 'responsável',
                'verbose_name_plural': 'responsáveis',
            },
        ),
        migrations.AddField(
            model_name='projeto',
            name='fk_responsavel_concedente',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='concedente', to='core.Responsavel'),
        ),
        migrations.AddField(
            model_name='projeto',
            name='fk_responsavel_proponente',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='proponente', to='core.Responsavel'),
        ),
    ]
